{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while(p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n        \n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n            \n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n            \n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]))\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100))\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while(j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while(j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while(i < n);\n                        break;\n                    }\n                } while(true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ]\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ]\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ]\n    }\n\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function(a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n}\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    return (index >= 0);\n                } else if (this._eventFunction[name] === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        // Because listener may detach itself while being invoked, we use a forEach instead of for loop.\n        listeners.forEach((listener) => {\n            listener(arg1, arg2, arg3);\n        });\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || (2048 / this.getPrecision());\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth += (10 - innerWidth);\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            height = lineHeight * (lines.length - 1) + 0.5 * fontSize + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth;\n            let words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ',letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth;\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ' ' + words[j];\n                }\n            }\n\n            if (result) {\n                resultLines.push(result);\n                result = '';\n            }\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    \n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        return new TextTextureRenderer(stage, canvas, settings);\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        // Inherit font face from stage.\n        if (args.fontFace === null) {\n            args.fontFace = this.stage.getOption('defaultFontFace');\n        }\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = new TextTextureRenderer(this.stage, canvas, args);\n            const p = renderer.draw();\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        let item = this._items[index];\n\n        if (item.ref) {\n            this._refs[item.ref] = undefined;\n        }\n\n        this._items.splice(index, 1);\n\n        this.onRemove(item, index);\n\n        return item;\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {[ref]: {}};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOfScreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc();\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc() {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template());\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f:f, a:context.store}\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`const ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`const ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`const ${propKey} = ${cursor}.enableTextTexture()`);\n                    this.parseTemplatePropRec(value, context, propKey);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`const ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n    \n    _construct() {\n    }\n\n    _build() {\n    }\n    \n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {}\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while(c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while(ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('Error: Could not initialize shader.');\n            console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.log(this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.log(this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.log(\"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = null;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = {format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE};\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2/w, 2/h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n    \n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n\n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                texture.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                console.log('Using image worker!');\n                this._imageWorker = new ImageWorker();\n            }\n        }\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n        this._removeKeyHandler();\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    loop() {\n        let self = this;\n        let lp = function() {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.drawFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLCanvasElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    loadSrcTexture({src, hasAlpha}, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function(err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function({imageBitmap, hasAlphaChannel}) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: {src: src},\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function() {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n            if (!(src.substr(0,5) == \"data:\")) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function(err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function() {\n                cb(null, {\n                    source: image,\n                    renderInfo: {src: src},\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function() {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n    \n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            const pixels = new Uint8Array(4);\n            const gl = this.stage.gl;\n            gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                console.log('Using canvas2d renderer');\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n    drawFrame() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n\n        this.emit('frameStart');\n\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n\n        this.emit('update');\n\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    renderFrame() {\n        this.ctx.frame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            console.log(`GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n            const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n            console.log(` Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n                if (this.__options.debug) {\n                    console.log('FOCUS ' + newFocusedComponent.getLocationString());\n                }\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n        img.crossOrigin = \"Anonymous\";\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error(e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set radius(v) {\n        if (Array.isArray(v)) {\n            this._radius = v;\n        } else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set strokeColor(argb) {\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set fillColor(argb) {\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return col;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n\n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = mix(vec4(0.0), color * fillColor, fillMask(b));\n        gl_FragColor = mix(tex, vColor * strokeColor, innerBorderMask(b, stroke));\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform(\"pivotX\", this._pivotX, this.gl.uniform1f);\n        this._setUniform(\"pivotY\", this._pivotY, this.gl.uniform1f);\n        this.redraw()\n    }\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform float pivotX;\n    uniform float pivotY;\n\n    void main() {\n        vec2 pivot = vec2(pivotX, pivotY);\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv)\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv)\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation)\n        this._setUniform(\"x\", this._x, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h, this.gl.uniform1f);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    \n    constructor(context) {\n        super(context);\n        \n        this._x = 0;\n        this._y = 0;\n\n        this.color = 0xFFFF0000;\n\n        this._radiusX = 100;\n        this._radiusY = 100;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    set radiusX(v) {\n        this._radiusX = v;\n        this.redraw();\n    }\n\n    get radiusX() {\n        return this._radiusX;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this.radiusX = v;\n        this.radiusY = v;\n    }\n\n    get color() {\n        return this._color;\n    }\n\n    set color(v) {\n        if (this._color !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._rawColor = new Float32Array(col);\n\n            this.redraw();\n\n            this._color = v;\n        }\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        const rtc = operation.getNormalRenderTextureCoords(this._x, this._y);\n        this._setUniform(\"center\", new Float32Array(rtc), this.gl.uniform2fv);\n\n        this._setUniform(\"radius\", 2 * this._radiusX / operation.getRenderWidth(), this.gl.uniform1f);\n\n\n        // Radial gradient shader is expected to be used on a single element. That element's alpha is used.\n        this._setUniform(\"alpha\", operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        this._setUniform(\"color\", this._rawColor, this.gl.uniform4fv);\n        this._setUniform(\"aspectRatio\", (this._radiusX/this._radiusY) * operation.getRenderHeight()/operation.getRenderWidth(), this.gl.uniform1f);\n    }\n\n}\n\nRadialGradientShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform vec2 center;\n    uniform float aspectRatio;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy - center;\n        pos.y = pos.y * aspectRatio;\n    }\n`;\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 pos;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform vec4 color;\n    uniform float alpha;\n    void main(void){\n        float dist = length(pos);\n        gl_FragColor = mix(color * alpha, texture2D(uSampler, vTextureCoord) * vColor, min(1.0, dist / radius));\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;"],"names":["StageUtils","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_getTotalCrossAxisSize","crossAxisSize","_getSpacing","lines","_lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","align","recursiveResizeOccured","setItemPositions","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","SizeGrower","_grownSize","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","grow","maxSize","_getMainAxisMaxSizeSetting","maxGrow","ItemPositioner","lineLayout","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","getGrownSize","shrinker","getShrunkSize","position","_calcCrossAxisMaxLayoutSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","performLayout","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","getMainAxisMinSize","_getCrossAxisMinSize","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","finalize","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","layoutLines","mainAxisContentSize","init","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","changedDimensions","changedContents","patchObject","f","direction","_changedContents","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","_changedDimensions","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","resizeAxis","getTotalMargin","getMarginOffset","_getMainAxisPadding","_getMainAxisMargin","_getCrossAxisLayoutSize","parseInt","_changed","_getDefaultShrink","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","isChanged","layoutTree","_checkEnabled","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_ensureFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","visible","isFlexItem","_clearFlexItemsCache","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","shrunk","_enableFlex","patch","_disableFlex","_getFlexItems","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","has","add","delete","becomesUsed","becomesUnused","cb","texture","elements","element","active","isUsed","load","cancel","isLoading","free","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","update","frameCounter","forEachActiveElement","forceRenderUpdate","_updateTextureCoords","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","forEachEnabledElement","_updateDimensions","e","onTextureSourceLoadError","isLoaded","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","textureManager","updateResultTexture","hasEnabledElements","resultTexture","getResultTexture","nativeTexture","replaceNativeTexture","core","setHasRenderUpdates","_hasRenderUpdates","release","releaseRenderTexture","allocateRenderTexture","updateRenderToTextureEnabled","_setRecalc","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_sr","sin","_cr","cos","_setLocalTransform","_updateLocalTranslate","_recalcLocalTranslate","_triggerRecalcTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removed","added","order","fromIndex","toIndex","isEstimate","ulx","uly","brx","bry","textureSource","root","coordsWidth","coordsHeight","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","prevZContext","_getZIndexedDescs","isAncestorOf","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","texturizer","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_stashedTexCoords","_stashedColors","layoutFlexTree","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","_hasRenderContext","updateTreeOrder","useRenderToTexture","mustRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","defaultShader","cleared","ignore","cache","hasResultTexture","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","renderTextureReused","getRenderTexture","setTexturizer","_stashTexCoords","colorize","_stashColors","_unstashColors","_unstashTexCoords","ptr","m","j","sort","mergeResult","relX","relY","_ensureLayout","_disableFuncX","setOriginalXWithoutUpdatingLayout","_updateLocalTranslateDelta","forceLayout","_disableFuncY","setOriginalYWithoutUpdatingLayout","_updateLocalTransform","scaleX","prev","_updateLocalAlpha","_updateEnabledFlag","setVisible","zIndex","prevShader","shader","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","current","listeners","off","arg1","arg2","arg3","object","addAsMixin","cls","on","removeListener","emit","listenerCount","removeAllListeners","Shader","coreContext","_initialized","_elements","cleanup","renderer","createShader","isShader","isValidShaderType","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","incActiveTextureCount","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","_updateSource","addUpdateSourceTexture","_getTextureSource","_getIsValid","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","loadError","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","clipX","clipY","_clearResizeMode","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","nonDefaults","precision","isAutosizeTexture","getRenderWidth","getRenderHeight","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","isTexture","ImageTexture","_src","_hasAlpha","src","hasAlpha","getOption","fc","charCodeAt","platform","loadSrcTexture","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","font","getFontSetting","_getFontSetting","textBaseline","ff","fontFace","ffs","fontStyle","fontSize","getPrecision","document","fonts","fontSetting","check","text","catch","then","loadPromise","_load","drawText","_draw","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","setFontProperties","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","l","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","linePositionX","linePositionY","_calculateRenderInfo","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","space","reduce","acc","char","TextTexture","_this","toString","args","cloneArgs","getDrawingCanvas","draw","assign","getTextureOptionsForDrawingCanvas","_text","_fontStyle","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_letterSpacing","_cutSx","_cutEx","_cutSy","_cutEy","proto","SourceTexture","_textureSource","getRenderPrecision","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","targetValue","isAttached","reset","delay","_updateDrawValue","removeActive","stop","addActive","getDrawValue","attached","dt","delayLeft","duration","invokeListeners","timingFunctionImpl","_timingFunctionImpl","startValue","isTransition","ObjectList","_refs","addAt","currentIndex","setAt","ref","onAdd","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","removeAt","onRemove","onSync","o","createItem","isItem","_setByObject","_setByArray","refs","_getRefs","crefs","cref","idx","array","same","_equalsArray","marker","newItems","_setItems","prevItems","filter","get","ElementChildList","prevChildList","childList","removeChildAt","_setParent","_connectParent","addChildAt","gc","syncChildren","map","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","setAsRoot","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","isRoot","_throwError","depth","levels","getDepth","getAncestor","o1","o2","l1","l2","_isEnabled","withinBoundsMargin","newAttached","_isAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","addElement","_setActiveFlag","_unsetActiveFlag","removeElement","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","deactivate","_onInactive","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","setDisplayedTextureSource","_getRenderWidth","_getRenderHeight","unknownSize","_onResize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","setTextureCoords","getCornerPoints","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","setToArray","removes","adds","hasTag","currentTags","removeTag","addTag","isUcChar","_addTag","list","mtag","values","res","_getByTag","level","resn","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","localTags","getTags","getLocationString","getSettings","getPrettyString","getNonDefaults","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","_allowChildrenAccess","paths","firstCharCode","remove","message","animations","createAnimation","_getTransition","_setTransition","_transitions","finish","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","start","tree","hasChildren","collectChildren","getProperties","clearRef","setRef","_tag","boundsMargin","offsetX","disableFuncW","disableFuncH","setTags","rectangleTexture","enableTextTexture","isString","onUpdate","onAfterCalcs","onAfterUpdate","create","rtt","transition","setSmooth","indent","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","toLowerCase","isColorProperty","mergeColors","mergeNumbers","getAt","properties","props","key","test","StateMachine","setupStateMachine","event","_hasMethod","_state","__path","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","stateAtLevel","_getStateAtLevel","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","pop","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","tagRoot","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","newTarget","prevTarget","_focusPath","cparent","ancestor","getSharedAncestor","isComponent","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","startsWith","_doFireAncestors","fire","_getState","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","isNumber","isBoolean","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","CoreQuadOperation","shaderOwner","scissor","quads","getTexture","getElementCore","getElement","renderWidth","renderHeight","getTextureWidth","getTextureHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getAttribsDataByteOffset","coords","getRenderTextureCoords","renderExec","_projection","projection","CoreRenderExecutor","gl","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","addEmpty","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","useDefault","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","location","getUniformLocation","getAttribLocation","glFunction","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","compile","setUniformValue","glProgram","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getProjection","_getProjection","DefaultShader","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","_setUniform","uniform2fv","glTexture","tx","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","WebGLRenderer","shaderProgram","destroy","getWebGL","createTexture","texImage2D","RGBA","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteTexture","premultiplyAlpha","flipBlueRed","texParams","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","RGB","uploadGlTexture","cloneObjShallow","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","C2dCoreQuadOperation","getRenderContext","getSimpleTc","getWhite","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","restore","save","_equalScissorAreas","_restoreContext","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","_addMemoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_imageWorker","_removeKeyHandler","loop","requestAnimationFrame","lp","drawFrame","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","cancelCb","isPng","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","performance","now","changes","keyhandler","_keydownListener","addEventListener","_keyupListener","removeEventListener","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","cap","DITHER","_getDefaultFlag","change","program","va","equal","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","migrate","setProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","setFlag","normalized","stride","setActiveTexture","setPixelStorei","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","red","green","blue","_blendColor","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","_clearColor","_clearDepth","_clearStencil","_colorMask","_cullFace","_depthFunc","flag","_depthMask","zNear","zFar","_depthRange","_frontFace","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","_stencilFunc","_stencilMask","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","_vertexAttrib2f","_vertexAttrib2fv","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","_initStateManager","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","managed","clearNativeTexture","TextureThrottler","_remove","_sources","_data","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","createCoreRenderState","createCoreRenderExecutor","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","_fillRenderState","pixels","Uint8Array","readPixels","_performRender","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","freeRenderTexture","copyRenderTexture","TransitionSettings","_timingFunction","getTimingFunction","TransitionManager","progress","isRunning","_toConsumableArray","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getValue","getAnimatedElements","sv","getResetValue","hasColorProperty","selector","resetValue","parse","prop","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","action","aas","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","play","STOPPED","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","Stage","_setOptions","_lastGcFrame","platformType","isWebglSupported","createWebGLContext","createCanvasContext","_mode","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","opt","app","startLoop","stopLoop","_updatingFrame","getHrTime","fixedDt","processSome","nextFrame","getRgbaComponentsNormalized","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","freeUnusedRenderTextures","serviceprovider","addServiceProvider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","updateFocusSettings","__keymap","registerKeydownHandler","_receiveKeydown","registerKeyupHandler","_receiveKeyup","__options","setApplication","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_focus","debug","_unfocus","_focusChange","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","_getFocused","newParts","events","focusPath","_getMostSpecificHandledMember","returnValue","keyCode","hasTimer","longpress","focusTopDownEvent","focusBottomUpEvent","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","Tools","canvasFactory","content","radius","strokeWidth","strokeColor","fillColor","createRoundRect","getCanvasTexture","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","margin","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","wrapper","_wrapper","NoiseTexture","noise","random","REPEAT","NEAREST","HtmlTexture","_htmlElement","_scale","htmlElement","innerHTML","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","firstElementChild","_preloadArea","attachShadow","style","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_get","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","ps","wasVisible","invisibleItem","getWrapper","checkStarted","ri","LinearBlurShader","_direction","_kernelRadius","uniform1i","redraw","BoxBlurShader","BlurShader","_amount","FastBlurComponent","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_paddingX","_paddingY","_updateBlurSize","_textwrap","sel","Textwrap","C2dBlurShader","Content","paddingX","paddingY","kernelRadius","_amountToKernelRadius","_multiSpline","getSpline","_this2","_layers","_output","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_buildLayers","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","ContentWrap","Scale","its","scalers","useScalers","_setIterations","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","first","borderWidth","Borders","Top","Right","Bottom","Left","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","WebGLGrayscaleShader","C2dGrayscaleShader","WebGLDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","getElementWidth","getElementHeight","getVertexAttribPointerOffset","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","full","_shiftBuckets","_values","_valuesTexture","ALPHA","_getValues","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_stroke","_fillColor","_getNormalizedColor","_strokeColor","renderPrecision","num","VignetteShader","_magnitude","_intensity","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_radiusX","_radiusY","rtc","getNormalRenderTextureCoords","renderContext","_rawColor","radiusX","radiusY","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Blur","components","tools","lng"],"mappings":"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"}